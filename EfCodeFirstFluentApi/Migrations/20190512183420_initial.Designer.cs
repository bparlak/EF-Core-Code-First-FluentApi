// <auto-generated />
using System;
using EfCodeFirstFluentApi.Models.Manager;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfCodeFirstFluentApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190512183420_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EfCodeFirstFluentApi.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CustomerId");

                    b.Property<int>("Age")
                        .HasColumnName("Age");

                    b.Property<string>("City")
                        .HasColumnName("City")
                        .HasMaxLength(15);

                    b.Property<string>("Country")
                        .HasColumnName("Country")
                        .HasMaxLength(15);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("Ad")
                        .HasMaxLength(20);

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnName("Soyad")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasMaxLength(20);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = "a1",
                            Age = 29,
                            City = "Ankara",
                            Country = "Turkey",
                            Email = "info@burakparlak.com",
                            FirstName = "Burak",
                            SecondName = "Parlak",
                            UserName = "bparlak"
                        },
                        new
                        {
                            CustomerId = "a2",
                            Age = 29,
                            City = "Ankara",
                            Country = "Turkey",
                            Email = "info@burakparlak.com",
                            FirstName = "Burak",
                            SecondName = "Parlak",
                            UserName = "bparlak"
                        },
                        new
                        {
                            CustomerId = "a3",
                            Age = 29,
                            City = "Ankara",
                            Country = "Turkey",
                            Email = "info@burakparlak.com",
                            FirstName = "Burak",
                            SecondName = "Parlak",
                            UserName = "bparlak"
                        },
                        new
                        {
                            CustomerId = "a4",
                            Age = 29,
                            City = "Ankara",
                            Country = "Turkey",
                            Email = "info@burakparlak.com",
                            FirstName = "Burak",
                            SecondName = "Parlak",
                            UserName = "bparlak"
                        });
                });

            modelBuilder.Entity("EfCodeFirstFluentApi.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("CustomerId");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnName("OrderDate");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = "a1",
                            OrderDate = new DateTime(2019, 5, 12, 21, 34, 19, 864, DateTimeKind.Local).AddTicks(596)
                        });
                });

            modelBuilder.Entity("EfCodeFirstFluentApi.Order", b =>
                {
                    b.HasOne("EfCodeFirstFluentApi.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
